{"version":3,"sources":["firebase.js","AuthProvider.js","Login.jsx","VideoCard.jsx","Home.jsx","Profile.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","unsub","onAuthStateChanged","a","user","displayName","email","uid","photoURL","docRef","collection","doc","get","exists","set","Provider","value","Login","useContext","to","onClick","type","className","VideoCard","props","boxOpen","setBoxOpen","playing","setPlaying","currentUserComment","setCurrentUserComment","allComments","setAllComments","allCommentId","post","comments","arr","i","length","id","commentData","data","push","f","e","currentTarget","pause","play","src","url","username","map","comment","index","pic","onChange","p","add","then","update","Home","posts","setPosts","unsubscription","onSnapshot","querySnapshot","docs","signOut","target","files","name","size","file","split","console","log","alert","Date","now","uploadtask","ref","put","on","snapshot","bytesTransferred","totalBytes","error","getDownloadURL","likes","Profile","totalPosts","setTotalPosts","where","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43ccda1f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCY7qVYutbj1-jiWG4qZYVzeqymq2weKf0\",\r\n  authDomain: \"reels-e227f.firebaseapp.com\",\r\n  projectId: \"reels-e227f\",\r\n  storageBucket: \"reels-e227f.appspot.com\",\r\n  messagingSenderId: \"379061422069\",\r\n  appId: \"1:379061422069:web:a15460796bc5e03b4dc2bc\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nlet provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n};\r\n\r\nexport default firebase;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport { auth, firestore } from \"./firebase\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nlet AuthProvider = ({ children }) => {\r\n  let [currentUser, setCurrentUser] = useState(null);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let unsub = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        let { displayName, email, uid, photoURL } = user;\r\n\r\n        let docRef = firestore.collection(\"users\").doc(uid);\r\n        let document = await docRef.get();\r\n        if (!document.exists) {\r\n          docRef.set({\r\n            displayName,\r\n            email,\r\n            photoURL,\r\n          });\r\n        }\r\n\r\n        setCurrentUser({ displayName, email, uid, photoURL });\r\n      } else {\r\n        setCurrentUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n\r\n  // jb user login ya logout pura krlega tab loading false hojaigi\r\n\r\n  return (\r\n    <AuthContext.Provider value={currentUser}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signInWithGoogle } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\n\r\nlet Login = () => {\r\n  let value = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      {value ? <Redirect to=\"/home\" /> : \"\"}\r\n\r\n      <button\r\n        onClick={signInWithGoogle}\r\n        type=\"submit\"\r\n        className=\"btn btn-primary m-4\"\r\n      >\r\n        Login With Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { firestore } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\n\r\nlet VideoCard = (props) => {\r\n  let [boxOpen, setBoxOpen] = useState(false);\r\n  let [playing, setPlaying] = useState(false);\r\n  let [currentUserComment, setCurrentUserComment] = useState(\"\");\r\n  let [allComments, setAllComments] = useState([]);\r\n\r\n  let value = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    let f = async () => {\r\n      let allCommentId = props.post.comments;\r\n      let arr = [];\r\n\r\n      for (let i = 0; i < allCommentId.length; i++) {\r\n        let id = allCommentId[i];\r\n\r\n        let doc = await firestore.collection(\"comments\").doc(id).get();\r\n        let commentData = { ...doc.data(), id: doc.id };\r\n        arr.push(commentData);\r\n      }\r\n\r\n      setAllComments(arr);\r\n    };\r\n\r\n    f();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"video-card\">\r\n      <video\r\n        onClick={(e) => {\r\n          if (playing) {\r\n            setPlaying(false);\r\n            e.currentTarget.pause();\r\n          } else {\r\n            setPlaying(true);\r\n            e.currentTarget.play();\r\n          }\r\n        }}\r\n        src={props.post.url}\r\n      ></video>\r\n      <span className=\"material-icons-outlined like\">favorite_border</span>\r\n      <span\r\n        className=\"material-icons-outlined comment\"\r\n        onClick={() => {\r\n          if (boxOpen) setBoxOpen(false);\r\n          else setBoxOpen(true);\r\n        }}\r\n      >\r\n        chat_bubble\r\n      </span>\r\n      <p className=\"username\">\r\n        <b>{props.post.username}</b>\r\n      </p>\r\n      <p className=\"song\">\r\n        <span className=\"material-icons-outlined\">music_note</span>\r\n        <marquee>song name</marquee>\r\n      </p>\r\n\r\n      {boxOpen ? (\r\n        <div className=\"comment-box\">\r\n          <button\r\n            className=\"comment-box-close-btn\"\r\n            onClick={() => {\r\n              setBoxOpen(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n\r\n          <div className=\"all-comments\">\r\n            {allComments.map((comment, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <img src={comment.pic} />\r\n                  <div>\r\n                    <p>\r\n                      <b>{comment.username}</b>\r\n                    </p>\r\n                    <p className=\"inner-comment\">{comment.comment}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"comment-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={currentUserComment}\r\n              onChange={(e) => {\r\n                setCurrentUserComment(e.currentTarget.value);\r\n              }}\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                let p = firestore.collection(\"comments\").add({\r\n                  comment: currentUserComment,\r\n                  username: value.displayName,\r\n                  pic: value.photoURL,\r\n                });\r\n\r\n                setCurrentUserComment(\"\");\r\n\r\n                p.then((docRef) => {\r\n                  return docRef.get();\r\n                }).then((doc) => {\r\n                  firestore\r\n                    .collection(\"posts\")\r\n                    .doc(props.post.id)\r\n                    .update({\r\n                      comments: [...props.post.comments, doc.id],\r\n                    });\r\n                });\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","import { Link, Redirect } from \"react-router-dom\";\r\nimport { auth, storage, firestore } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport VideoCard from \"./VideoCard\";\r\nimport \"./Home.css\";\r\n\r\nlet Home = () => {\r\n  let value = useContext(AuthContext);\r\n\r\n  let [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscription = firestore\r\n      .collection(\"posts\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setPosts(\r\n          querySnapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          })\r\n        );\r\n      });\r\n\r\n    // console.log(posts);\r\n\r\n    //unsub from listening to changes on posts collection when home component is unmounted\r\n    return () => {\r\n      unsubscription();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {value ? (\r\n        <>\r\n          <div className=\"posts-container\">\r\n            {posts.map((post, index) => {\r\n              return <VideoCard key={index} post={post} />;\r\n            })}\r\n          </div>\r\n          <button\r\n            className=\"logout-btn\"\r\n            onClick={() => {\r\n              auth.signOut();\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n\r\n          <Link to=\"/profile\">\r\n            <button id=\"profile\">Profile</button>\r\n          </Link>\r\n\r\n          <input\r\n            //whenever click on input file tag set its value to null so that even if we select same file the tag will feel we have done some changes and it will call onChange\r\n            onClick={(e) => {\r\n              e.target.value = null;\r\n            }}\r\n            onChange={(e) => {\r\n              if (!e.target.files[0]) return;\r\n\r\n              //get file name size and type\r\n              let { name, size, type } = e.target.files[0];\r\n              //store the selected file so that we can upload it later on\r\n              let file = e.target.files[0];\r\n              //convert the file size into mb\r\n              size = size / 1000000;\r\n\r\n              //get file type\r\n              type = type.split(\"/\")[0];\r\n\r\n              //checks\r\n\r\n              console.log(size);\r\n              console.log(type);\r\n\r\n              if (type !== \"video\") {\r\n                alert(\"Please upload a video\");\r\n              } else if (size > 10) {\r\n                alert(\"File is too big\");\r\n              } else {\r\n                console.log(\"paucha\");\r\n                //f1 function passed to state_changed event for upload progress\r\n                let f1 = (snapshot) => {\r\n                  console.log(snapshot.bytesTransferred);\r\n                  console.log(snapshot.totalBytes);\r\n                };\r\n                //f2 function passed to state_changed event for error handling\r\n                let f2 = (error) => {\r\n                  console.log(error);\r\n                };\r\n\r\n                //f3 function passed to state_changed event which executes when file is uploaded\r\n                //so that we can get the uploaded file url\r\n                let f3 = () => {\r\n                  //getDownloadURL method is used to generate the url, it gives a promise\r\n                  let p = uploadtask.snapshot.ref.getDownloadURL();\r\n                  p.then((url) => {\r\n                    firestore.collection(\"posts\").add({\r\n                      username: value.displayName,\r\n                      url,\r\n                      likes: 0,\r\n                      comments: [],\r\n                    });\r\n                  });\r\n                };\r\n\r\n                console.log(`/posts/${value.uid}/${Date.now() + name}`);\r\n\r\n                //using the firebase storage object we are getting reference of a file location\r\n                //in our case posts/userId/fileName and uploading our file to that location\r\n                let uploadtask = storage\r\n                  //added current date to filename so that same file copies can be store to firebase with out overriding\r\n                  .ref(`/posts/${value.uid}/${Date.now() + name}`)\r\n                  .put(file);\r\n\r\n                // the upload method gives us uploadTask which can be used to set up\r\n                //state_changed event\r\n                //this takes 3 callbacks\r\n                uploadtask.on(\"state_changed\", f1, f2, f3);\r\n              }\r\n\r\n              // upload\r\n            }}\r\n            className=\"upload-btn\"\r\n            type=\"file\"\r\n          />\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { firestore } from \"./firebase\";\r\nimport \"./Profile.css\";\r\n\r\nimport \"./Profile.css\";\r\n\r\nlet Profile = () => {\r\n  let value = useContext(AuthContext);\r\n  let [totalPosts, setTotalPosts] = useState(0);\r\n\r\n  console.log(value);\r\n\r\n  useEffect(() => {\r\n    let f = async () => {\r\n      let querySnapshot = await firestore\r\n        .collection(\"posts\")\r\n        .where(\"username\", \"==\", value.displayName)\r\n        .get();\r\n\r\n      console.log(\"size\", querySnapshot.size);\r\n      setTotalPosts(querySnapshot.size);\r\n    };\r\n\r\n    f();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {value ? (\r\n        <div className=\"profile-btn\">\r\n          <img src={value.photoURL} />\r\n          <p className=\"username-profile\">{value.displayName}</p>\r\n          <p className=\"ttpost\">Total Posts: {totalPosts}</p>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Login from \"./Login\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AuthProvider from \"./AuthProvider\";\nimport \"./Profile.css\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}